"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 3.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o95wtyc-afym8%_(%%-n#7l)bau@a0n-2sry0c^xoq%2omybv='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_celery_beat',
    'transcription',
    'django_tus',
    'channels'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'
ASGI_APPLICATION = 'server.asgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# login redirect
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'assets',
]

# https://docs.djangoproject.com/en/4.1/howto/static-files/#deployment
# Absolute path to the directory static files should be collected to.
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Absolute filesystem path to the directory that will hold user-uploaded files.
MEDIA_ROOT = BASE_DIR / 'media'

# Django Max Upload Size
DATA_UPLOAD_MAX_MEMORY_SIZE = 4294967296  # 4GB

# Django Tus Upload Config
TUS_DESTINATION_DIR = BASE_DIR / 'media'

# Django Tus Upload Config
TUS_UPLOAD_DIR = 'tus_upload'
TUS_FINAL_DIR = 'uploads/'
TUS_FILE_NAME_FORMAT = 'random'  # Other options are: 'random-suffix', 'random', 'keep'
TUS_EXISTING_FILE = 'random'  # Other options are: 'overwrite',  'error', 'rename'


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Django REST framework! We'll create a read-write API for accessing information on
# the users of our project.
# https://www.django-rest-framework.org/#installation
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),
}


# Celery Configuration
# https://github.com/celery/celery/tree/master/examples/django/
CELERY_BROKER_URL = 'redis://localhost:6379/0'
# CELERY_CACHE_BACKEND = 'default'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_STORE_ERRORS_EVEN_IF_IGNORED = True
CELERY_TIMEZONE = 'Asia/Karachi'
DJANGO_CRON_MULTITHREADED = True

#####################
# DATABASE CACHING  #
#####################

# Default is enabled # TODO
# To enable tenant aware caching you can set the KEY_FUNCTION setting to use
# the provided make_key helper function which adds the tenants schema_name as the first key prefix.
# https://docs.djangoproject.com/en/4.0/topics/cache/
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.redis.RedisCache',
#         'LOCATION': 'redis://127.0.0.1:6379',
#         # 'KEY_FUNCTION': 'django_tenants.cache.make_key',
#         # 'REVERSE_KEY_FUNCTION': 'django_tenants.cache.reverse_key',
#     }
# }
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/django_cache',
        # 'KEY_FUNCTION': 'django_tenants.cache.make_key',
        # 'REVERSE_KEY_FUNCTION': 'django_tenants.cache.reverse_key',
    }
}


# Redis Channel Layer! In this example, Redis is running on localhost (127.0.0.1) port 6379:
# https://channels.readthedocs.io/en/stable/topics/channel_layers.html#redis-channel-layer
# CHANNEL_LAYERS = {
#     'default': {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://localhost:6379/1",
#         # 'CONFIG': {
#         #     'hosts': [('127.0.0.1', 6379)],
#         # },
#     },
# }
